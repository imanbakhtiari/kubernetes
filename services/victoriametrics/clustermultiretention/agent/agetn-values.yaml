global:
  # -- Image pull secrets, that can be shared across multiple helm charts
  imagePullSecrets: []
  image:
    # -- Image registry, that can be shared across multiple helm charts
    registry: ""
  # -- Openshift security context compatibility configuration
  compatibility:
    openshift:
      adaptSecurityContext: "auto"
  # -- k8s cluster domain suffix, uses for building storage pods' FQDN. Details are [here](https://kubernetes.io/docs/tasks/administer-cluster/dns-custom-nameservers/)
  cluster:
    dnsDomain: company.local.

replicaCount: 3
fullnameOverride: "vmagent"
#remoteWrite:
#  - url: http://vminsert-live.monitoring.svc.company.local:8480/insert/0/prometheus/

remoteWrite:
  # Long-term storage
  #- url: "http://vminsert-live.monitoring.svc.company.local:8480/insert/0/prometheus/"
  #  urlRelabelConfig:
  #    - source_labels: [job]
  #      regex: "netdata"
  #     action: keep  # Keep only metrics from these jobs

  # Live storage
  - url: "http://vminsert-longterm.monitoring.svc.company.local:8480/insert/0/prometheus/"
#    write_relabel_configs:
#      - source_labels: [job]
#        regex: ""
#        action: keep  # Keep only metrics from these jobs
config:
  global:
    scrape_interval: 30s
    scrape_timeout: 15s

  scrape_configs:
    - job_name: 'cilium'
      kubernetes_sd_configs:
      - role: pod
      relabel_configs:
        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
          action: keep
          regex: true
        - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
          action: replace
          regex: ([^:]+)(?::\d+)?;(\d+)
          replacement: ${1}:${2}
          target_label: __address__
        - source_labels: [__meta_kubernetes_pod_node_name]
          target_label: node
        # Add a label for the pod name
        - source_labels: [__meta_kubernetes_pod_name]
          target_label: pod

    - job_name: "varnish"
#      scrape_interval: 1s
#      scrape_timeout: 1s
      metrics_path: /metrics
#      params:
#        format: ['prometheus']
      scheme: http
      kubernetes_sd_configs:
        - role: pod
      relabel_configs:
        - source_labels: [__meta_kubernetes_pod_label_app]
          action: keep
          regex: varnish
        - source_labels: [__address__]
          target_label: __address__
          replacement: varnish-exporter.varnish.svc.company.local:9131
        - source_labels: [__meta_kubernetes_pod_node_name]
          target_label: node
        # Add a label for the pod name
        - source_labels: [__meta_kubernetes_pod_name]
          target_label: pod
        # Extract the pod IP and port dynamically
        - source_labels: [__meta_kubernetes_pod_ip]
          target_label: __address__
          replacement: $1:19999

    - job_name: "netdata"
      scrape_interval: 1s
      scrape_timeout: 1s
      metrics_path: /api/v1/allmetrics
      params:
        format: ['prometheus']
      scheme: http
      kubernetes_sd_configs:
        - role: pod
      relabel_configs:
        # Keep only pods with label app=webserver
        - source_labels: [__meta_kubernetes_pod_label_app2]
          action: keep
          regex: lb-mediasrv-netdata
        # Add a label for the node (host) where the pod is running
        - source_labels: [__meta_kubernetes_pod_node_name]
          target_label: node
        # Add a label for the pod name
        - source_labels: [__meta_kubernetes_pod_name]
          target_label: pod
        # Extract the pod IP and port dynamically
        - source_labels: [__meta_kubernetes_pod_ip]
          target_label: __address__
          replacement: $1:19999

    - job_name: 'redis-cluster-metrics'
      kubernetes_sd_configs:
        - role: pod  # Discover Redis pods in the cluster
          namespaces:
            names:
              - redis-cluster  # Specify the namespace where your Redis pods are located

      metrics_path: /metrics  # Path for Redis exporter metrics
      scheme: http  # Use http unless your metrics endpoint requires https

      relabel_configs:
        # Match Redis pods by their specific labels
        - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_name, __meta_kubernetes_pod_label_app_kubernetes_io_instance, __meta_kubernetes_pod_label_redis_setup_type]
          action: keep
          regex: redis-cluster;redis-cluster;cluster  # Match all three labels

        # Optionally label the instance with the pod's role (leader or follower)
        - source_labels: [__meta_kubernetes_pod_label_role]
          target_label: redis_role

        # Add app label for identification
        - source_labels: [__meta_kubernetes_pod_label_app]
          target_label: redis_app

        # Retain the pod address (this allows Prometheus to scrape from the specific pod)
        - source_labels: [__address__]
          target_label: __address__
          replacement: redis-cluster-metrics.redis-cluster.svc.cluster.local:9121

        # Optionally add namespace and pod name for more detailed identification
        - source_labels: [__meta_kubernetes_namespace]
          target_label: kubernetes_namespace
        - source_labels: [__meta_kubernetes_pod_name]
          target_label: kubernetes_pod_name

    - job_name: 'redis-standalone-metrics'
      kubernetes_sd_configs:
        - role: pod
          namespaces:
            names:
              - redis-standalone
      metrics_path: /metrics
      scheme: http
      relabel_configs:
        - source_labels:
            - __meta_kubernetes_pod_label_app_kubernetes_io_name
            - __meta_kubernetes_pod_label_app_kubernetes_io_instance
            - __meta_kubernetes_pod_label_app_kubernetes_io_component
          action: keep
          regex: redis;redis-standalone;database

        - source_labels: [__meta_kubernetes_pod_container_port_name]
          action: keep
          regex: metrics

        - source_labels: [__meta_kubernetes_pod_ip]
          target_label: __address__
          replacement: $1:9121

        - source_labels: [__meta_kubernetes_namespace]
          target_label: kubernetes_namespace

        - source_labels: [__meta_kubernetes_pod_name]
          target_label: kubernetes_pod_name
